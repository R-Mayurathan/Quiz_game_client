package Quiz_Game.rmi.client;

import java.sql.*;
import Quiz_Game.Interface.Interface;
import java.awt.Color;
import java.awt.Font;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.Vector;
import javax.sql.rowset.CachedRowSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
/*
 * This program is to show the all students Scores. 
 * @author  Rasu Mayurathan
 * @version 1.0
 * @since   2021-11-22
 */
public class A_AllStudentsScores extends javax.swing.JFrame {

    /**
     * This method is to get the all students results
     */
    public A_AllStudentsScores() {
        initComponents();
  
        try {
            /*The suspect that this block of statement can throw
            * exception so we handled it by placing these statements
            * inside try and handled the exception in catch block
             */

            Interface b = (Interface) Naming.lookup("rmi://localhost:1099/Server"); //It calls naming lookup and url  
            CachedRowSet details = b.allStudentResult();//Getting the results in CatchedRowSet
            ResultSetMetaData rsmd = details.getMetaData();//CachedRowSet inherits method getMetaData which returns ResultSetMetaData 
            //which can be used to get the names of the columns as well as the column count
            int columnCount = rsmd.getColumnCount();
            Vector<Object> columnNames = new Vector<>(columnCount);
            for (int i = 0; i < columnCount; i++) {
                columnNames.add(rsmd.getColumnLabel(i + 1));
            }
            Vector<Object> rows = new Vector<>();
            while (details.next()) {
                Vector<Object> row = new Vector<>(columnCount);
                for (int i = 0; i < columnCount; i++) {
                    row.add(details.getObject(i + 1));
                }
                rows.add(row);
            }
            DefaultTableModel tblModel = new DefaultTableModel(rows, columnNames);
            jTable1.setModel(tblModel);

            /**
             * *
             * This code segment to customize jtable
             */
            TableColumnModel columnModel = jTable1.getColumnModel();
            columnModel.getColumn(0).setPreferredWidth(130);
            columnModel.getColumn(1).setPreferredWidth(130);
            columnModel.getColumn(2).setPreferredWidth(130);
            columnModel.getColumn(3).setPreferredWidth(130);
            columnModel.getColumn(4).setPreferredWidth(130);

            jTable1.setBackground(Color.white);
            jTable1.setForeground(Color.black);
            jTable1.setRowHeight(50);

            JTableHeader tableHeader = jTable1.getTableHeader();
            tableHeader.setBackground(Color.black);
            tableHeader.setForeground(Color.black);
            Font headerFont = new Font("Verdana", Font.PLAIN, 15);
            tableHeader.setFont(headerFont);

        } catch (MalformedURLException | NotBoundException | RemoteException | SQLException e) {
            /* This block will only execute if any  exception
        * occurs in try block
             */
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        Filter_TextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(425, 300));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close-black-32.gif"))); // NOI18N
        jButton1.setOpaque(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel2.setText("ALL STUDENT'S RESULTS");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel3.setText("Filter By Marks");

        Filter_TextField.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        Filter_TextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        Filter_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filter_TextFieldActionPerformed(evt);
            }
        });
        Filter_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Filter_TextFieldKeyReleased(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 2, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1066, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Filter_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Filter_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         AdminHomePanel.open=0;
         setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Filter_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filter_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Filter_TextFieldActionPerformed

    private void Filter_TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Filter_TextFieldKeyReleased
        // TODO add your handling code here:
  
        int marks;
        String marks1 = null;
        if(Filter_TextField.getText().equals(""))
        {
            marks=0;
        }
        else
        {   
          marks=Integer.parseInt(Filter_TextField.getText());
          marks1=String.valueOf(marks);
        }
        try {
             
        Interface b = (Interface) Naming.lookup("rmi://localhost:1099/Server");
        CachedRowSet details = b.allStudentResultbyMarks(marks1);
        ResultSetMetaData rsmd = details.getMetaData();
        int columnCount = rsmd.getColumnCount();
        Vector<Object> columnNames = new Vector<>(columnCount);
        for (int i = 0 ; i < columnCount; i++) {
            columnNames.add(rsmd.getColumnLabel(i + 1));
        }
        Vector<Object> rows = new Vector<>();
        while (details.next()) {
            Vector<Object> row = new Vector<>(columnCount);
            for (int i = 0; i < columnCount; i++) {
                row.add(details.getObject(i + 1));
            }
            rows.add(row);
        }
        DefaultTableModel tblModel = new DefaultTableModel(rows, columnNames);
        jTable1.setModel(tblModel);
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(130);
        columnModel.getColumn(1).setPreferredWidth(130);
        columnModel.getColumn(2).setPreferredWidth(130);
        columnModel.getColumn(3).setPreferredWidth(130);
        columnModel.getColumn(4).setPreferredWidth(130);
            
        jTable1.setBackground(Color.white);
        jTable1.setForeground(Color.black);
        jTable1.setRowHeight(50);
            
        JTableHeader tableHeader = jTable1.getTableHeader();
        tableHeader.setBackground(Color.black);
        tableHeader.setForeground(Color.black);
        Font headerFont = new Font("Verdana", Font.PLAIN, 20);
        tableHeader.setFont(headerFont);
       
    }
    catch (MalformedURLException | NotBoundException | RemoteException | SQLException e) {
        JOptionPane.showMessageDialog(null, e);
        e.printStackTrace();
    } 
        
    }//GEN-LAST:event_Filter_TextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(A_AllStudentsScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(A_AllStudentsScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(A_AllStudentsScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(A_AllStudentsScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new A_AllStudentsScores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Filter_TextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
