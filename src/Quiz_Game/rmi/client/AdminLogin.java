package Quiz_Game.rmi.client;

import Quiz_Game.Interface.Interface;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/*
 * This is the admin login interface.
 * @author  Rasu Mayurathan
 * @version 1.0
 * @since 2021-11-22
 */
public class AdminLogin extends javax.swing.JFrame {

    /**
     * Creates new form AdminLogin
     */
    public AdminLogin() {
        initComponents();
    }
    Point location;//Point class represents a location in a two-dimensional (x, y) coordinate space.
    Point pressed;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminLogin_bg = new javax.swing.JPanel();
        Login = new javax.swing.JLabel();
        Back = new javax.swing.JLabel();
        Show_Password = new javax.swing.JCheckBox();
        Password = new javax.swing.JLabel();
        txtuser = new javax.swing.JTextField();
        Username = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtpass = new javax.swing.JPasswordField();
        navigation_bar = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        BackBtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AdminLogin_bg.setBackground(new java.awt.Color(51, 51, 51));
        AdminLogin_bg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        AdminLogin_bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Login.setFont(new java.awt.Font("Ubuntu Mono", 0, 25)); // NOI18N
        Login.setForeground(new java.awt.Color(255, 255, 255));
        Login.setText("Login");
        Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginMouseClicked(evt);
            }
        });
        Login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LoginKeyPressed(evt);
            }
        });
        AdminLogin_bg.add(Login, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 508, -1, -1));

        Back.setBackground(new java.awt.Color(255, 255, 255));
        Back.setFont(new java.awt.Font("Ubuntu Mono", 0, 25)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("Back");
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        AdminLogin_bg.add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 508, -1, -1));

        Show_Password.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Show_Password.setForeground(new java.awt.Color(255, 255, 255));
        Show_Password.setText("Show Password");
        Show_Password.setOpaque(false);
        Show_Password.setContentAreaFilled(false);
        Show_Password.setBorderPainted(false);
        Show_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_PasswordActionPerformed(evt);
            }
        });
        AdminLogin_bg.add(Show_Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 452, -1, -1));

        Password.setFont(new java.awt.Font("Ubuntu Mono", 0, 25)); // NOI18N
        Password.setForeground(new java.awt.Color(255, 255, 255));
        Password.setText("Password");
        AdminLogin_bg.add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 360, -1, -1));

        txtuser.setBackground(new java.awt.Color(52, 52, 52));
        txtuser.setFont(new java.awt.Font("Ubuntu Mono", 0, 25)); // NOI18N
        txtuser.setForeground(new java.awt.Color(255, 255, 255));
        txtuser.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        AdminLogin_bg.add(txtuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 286, -1));

        Username.setFont(new java.awt.Font("Ubuntu Mono", 0, 25)); // NOI18N
        Username.setForeground(new java.awt.Color(255, 255, 255));
        Username.setText("Username");
        AdminLogin_bg.add(Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 251, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/studentProfile_blue_128.png"))); // NOI18N
        AdminLogin_bg.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 68, 140, 165));

        txtpass.setBackground(new java.awt.Color(52, 52, 52));
        txtpass.setFont(new java.awt.Font("Ubuntu Mono", 0, 25)); // NOI18N
        txtpass.setForeground(new java.awt.Color(255, 255, 255));
        txtpass.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpassKeyPressed(evt);
            }
        });
        AdminLogin_bg.add(txtpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 286, -1));

        navigation_bar.setBackground(new java.awt.Color(0, 0, 0));
        navigation_bar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                navigation_barMouseDragged(evt);
            }
        });
        navigation_bar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                navigation_barMousePressed(evt);
            }
        });
        navigation_bar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        close.setFont(new java.awt.Font("Ubuntu Mono", 0, 35)); // NOI18N
        close.setForeground(new java.awt.Color(255, 255, 255));
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close-white-28.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeMousePressed(evt);
            }
        });
        navigation_bar.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, -1, 30));

        minimize.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 50)); // NOI18N
        minimize.setForeground(new java.awt.Color(255, 255, 255));
        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/minimize-white-28.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                minimizeMousePressed(evt);
            }
        });
        navigation_bar.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 0, 30, 30));

        BackBtn.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 25)); // NOI18N
        BackBtn.setForeground(new java.awt.Color(255, 255, 255));
        BackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back-white-28.png"))); // NOI18N
        BackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackBtnMouseClicked(evt);
            }
        });
        navigation_bar.add(BackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 30, 30));

        AdminLogin_bg.add(navigation_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 618, -1));

        getContentPane().add(AdminLogin_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginMouseClicked
        //When the login button is clicked, it will validate the username and password.Â 
        //If the username and password is correct, it will redirect to admin panel.

        boolean result;

       
        //getting the username
        String username = txtuser.getText();
        //getting the password
        String password = String.valueOf(txtpass.getPassword());
        
        if(username.isEmpty() && password.isEmpty()) //Check whether username and password are empty.
        {
            JOptionPane.showMessageDialog(null, "username and password can't be empty");//Show the dialog box if the username and password are empty.
        }
        
        else if(username.isEmpty()){//show dialogbox if the username is empty
            JOptionPane.showMessageDialog(null, "username can't be empty");
        }
        else if(password.isEmpty()){//show dialogbox if the password is empty
            JOptionPane.showMessageDialog(null, "password can't be empty");
        }
        else
        {
        
        //if username and passwords are filled validate the user
        try {
            /* The suspect that this block of statement can throw 
             * exception so we handled it by placing these statements
             * inside try and handled the exception in catch block
             */

            Interface a = (Interface) Naming.lookup("rmi://localhost:1099/Server"); //It calls naming lookup and url  

            result = a.LogIn(username, password); //parsing the parameters in login to validate
            if (result) {
                setVisible(false);
                new AdminHomePanel().setVisible(true);//redirect to AdminHomePanel if the username and password is correct

            } else {
                JOptionPane.showMessageDialog(null, "Invalid Username / Password", "Login Error", 2);//Showing error messege if the username and password is correct
            }

            /*
        *This block will only execute if any  exception occurs in try block
             */
        } catch (HeadlessException | NotBoundException | RemoteException ex) {
            JOptionPane.showMessageDialog(null, "" + ex);

            /* This block will only execute if any Arithmetic exception 
             * occurs in try block
             */
        } catch (MalformedURLException ex) {
            Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      }
      
    }//GEN-LAST:event_LoginMouseClicked

    private void Show_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_PasswordActionPerformed
        // This code segement is to show the password.
        if (Show_Password.isSelected()) {
            txtpass.setEchoChar((char) 0);
        } else {
            txtpass.setEchoChar('*');
        }
    }//GEN-LAST:event_Show_PasswordActionPerformed

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        //This code segment is used to go to indexGUI
        setVisible(false);
        new AA_IndexGUI().setVisible(true);
    }//GEN-LAST:event_BackMouseClicked

    private void navigation_barMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navigation_barMouseDragged
        //This code segment is used to mouse dragged event
        Point dragged = evt.getLocationOnScreen();
        int x = (int) (location.x + dragged.getX() - pressed.getX());
        int y = (int) (location.y + dragged.getY() - pressed.getY());
        Window window = SwingUtilities.windowForComponent(evt.getComponent());
        window.setLocation(x, y);
    }//GEN-LAST:event_navigation_barMouseDragged

    private void navigation_barMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navigation_barMousePressed
        //This code segment is used to mouse pressed event
        pressed = evt.getLocationOnScreen();
        Window window = SwingUtilities.windowForComponent(evt.getComponent());
        location = window.getLocation();
    }//GEN-LAST:event_navigation_barMousePressed

    private void minimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMousePressed
        //This code segment to minimize the application
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeMousePressed

    private void closeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMousePressed
        //This code segment to exit the application
        System.exit(0);
    }//GEN-LAST:event_closeMousePressed

    private void BackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackBtnMouseClicked
        //This code segment is to go to IndexGUI GUI
        setVisible(false);
        new AA_IndexGUI().setVisible(true);
    }//GEN-LAST:event_BackBtnMouseClicked

    private void LoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LoginKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginKeyPressed

    private void txtpassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpassKeyPressed
        //When the enter button is pressed, if the cursor is on the password field, it will validate the username and password.Â 
        //if the username and password is correct, it will redirect to admin panel.
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        
             boolean result;

        String mySessionCookie = "not set";
        //getting the username
        String username = txtuser.getText();
        //getting the password
        String password = String.valueOf(txtpass.getPassword());

        try {
            /* The suspect that this block of statement can throw 
             * exception so we handled it by placing these statements
             * inside try and handled the exception in catch block
             */

            Interface a = (Interface) Naming.lookup("rmi://localhost:1099/Server"); //It calls naming lookup and url  

            result = a.LogIn(username, password);
            if (result) {
                setVisible(false);
                new AdminHomePanel().setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null, "Invalid Username / Password", "Login Error", 2);
            }

            /*
        *This block will only execute if any  exception occurs in try block
             */
        } catch (HeadlessException | NotBoundException | RemoteException ex) {
            JOptionPane.showMessageDialog(null, "" + ex);

            /* This block will only execute if any Arithmetic exception 
             * occurs in try block
             */
        } catch (MalformedURLException ex) {
            Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_txtpassKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminLogin_bg;
    private javax.swing.JLabel Back;
    private javax.swing.JLabel BackBtn;
    private javax.swing.JLabel Login;
    private javax.swing.JLabel Password;
    private javax.swing.JCheckBox Show_Password;
    private javax.swing.JLabel Username;
    private javax.swing.JLabel close;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel navigation_bar;
    private javax.swing.JPasswordField txtpass;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables
}
